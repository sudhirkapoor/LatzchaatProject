<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true">

		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/index" access="permitAll" />
		<intercept-url pattern="/Blogs" access="permitAll" />
		<!-- <intercept-url pattern="/UserProfile" access="hasRole('ROLE_USER')" /> -->
		<!-- <intercept-url pattern="/Blogs" access="hasRole('ROLE_ADMIN')" /> -->
		<form-login login-page="/Login" default-target-url="/"
			username-parameter="email" password-parameter="password"
			authentication-failure-url="/Login" />
		<logout logout-success-url="/index" />
		<csrf disabled="true" />
	</http>
	<!-- Authentication using xml only -->
	<!-- <authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="password1" authorities="ROLE_ADMIN" />

			</user-service>
		</authentication-provider>
	</authentication-manager> -->

	<!-- Authentication using database connection -->
	<authentication-manager>
		<authentication-provider>

			<!-- <jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password, enabled from admin where email=?"
				authorities-by-username-query="select email, role from admin where email =?" /> -->

			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password, enabled from userdetails where email=?"
				authorities-by-username-query="select email, role from userdetails where email =?  " />



			<user-service>
				<user name="admin" password="password1" authorities="ROLE_ADMIN" />

			</user-service>

		</authentication-provider>

	</authentication-manager>

</beans:beans>
